#!/usr/bin/python3
#	pyirclib - Python IRC client library with DCC and anonymization support
#	Copyright (C) 2020-2020 Johannes Bauer
#
#	This file is part of pyirclib.
#
#	pyirclib is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	pyirclib is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with pyirclib; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import json
import collections

with open("/tmp/irc_version.json") as f:
	versions = json.load(f)

known_clients = [
	"adiirc",
	"hexchat",
	"icechat",
	"irssi",
	"konversation",
	"limechat",
	"mirc",
	"purple irc",
	"quassel",
	"textual",
	"thelounge",
	"thunderbird",
	"weechat",
	"x-chat",
	"xchat",
	"znc",
]

bogus_clients = [
	"mirc 9000",
]

def client_acceptable(client):
	lclient = client.lower()
	for bogus_client in bogus_clients:
		if bogus_client in lclient:
			return False
	for known_client in known_clients:
		if known_client in lclient:
			return True
	return False

versions = collections.Counter(versions.values())
acceptable_clients = { }
acceptable_count = 0
total_count = 0
for (client, cnt) in sorted(versions.items()):
	total_count += cnt
	if cnt == 1:
		continue
	if len(client) > 60:
		continue
	acceptable = client_acceptable(client)
	if acceptable:
		print("%3d %s" % (cnt, client))
		acceptable_count += cnt
		acceptable_clients[client] = cnt

print("Accepted: %d of %d (%.1f%%)" % (acceptable_count, total_count, acceptable_count / total_count * 100))
with open("acceptable_client.json", "w") as f:
	json.dump(acceptable_clients, f)
